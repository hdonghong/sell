Starting SellApplication on LAPTOP-0GL3T8P4 with PID 16016 (F:\repository_git\sell\target\classes started by Lenovo in F:\repository_git\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@489115ef: startup date [Wed Apr 11 15:11:21 CST 2018]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2822 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@489115ef: startup date [Wed Apr 11 15:11:21 CST 2018]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> pers.hdh.sell.controller.BuyerOrderController.create(pers.hdh.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<java.util.List<pers.hdh.sell.dto.OrderDto>> pers.hdh.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<pers.hdh.sell.dto.OrderDto> pers.hdh.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.save(pers.hdh.sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.save(pers.hdh.sell.form.ProductFrom,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public void pers.hdh.sell.controller.SellerUserController.logout()
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerUserController.login(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletResponse)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void pers.hdh.sell.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 9.04 seconds (JVM running for 10.517)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on LAPTOP-0GL3T8P4 with PID 5580 (F:\repository_git\sell\target\classes started by Lenovo in F:\repository_git\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@17a1e4ca: startup date [Wed Apr 11 15:16:46 CST 2018]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1804 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@17a1e4ca: startup date [Wed Apr 11 15:16:46 CST 2018]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> pers.hdh.sell.controller.BuyerOrderController.create(pers.hdh.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<java.util.List<pers.hdh.sell.dto.OrderDto>> pers.hdh.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<pers.hdh.sell.dto.OrderDto> pers.hdh.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.save(pers.hdh.sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.save(pers.hdh.sell.form.ProductFrom,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerUserController.login(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletResponse)
Mapped "{[/seller/logout],methods=[GET]}" onto public void pers.hdh.sell.controller.SellerUserController.logout()
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void pers.hdh.sell.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 5.976 seconds (JVM running for 6.964)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on LAPTOP-0GL3T8P4 with PID 13868 (F:\repository_git\sell\target\classes started by Lenovo in F:\repository_git\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@17a1e4ca: startup date [Wed Apr 11 15:19:33 CST 2018]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1907 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@17a1e4ca: startup date [Wed Apr 11 15:19:33 CST 2018]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> pers.hdh.sell.controller.BuyerOrderController.create(pers.hdh.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<java.util.List<pers.hdh.sell.dto.OrderDto>> pers.hdh.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<pers.hdh.sell.dto.OrderDto> pers.hdh.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.save(pers.hdh.sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.save(pers.hdh.sell.form.ProductFrom,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public void pers.hdh.sell.controller.SellerUserController.logout()
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerUserController.login(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletResponse)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void pers.hdh.sell.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 7.53 seconds (JVM running for 8.479)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 44 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on LAPTOP-0GL3T8P4 with PID 4260 (F:\repository_git\sell\target\classes started by Lenovo in F:\repository_git\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@17a1e4ca: startup date [Wed Apr 11 15:23:33 CST 2018]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1800 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@17a1e4ca: startup date [Wed Apr 11 15:23:33 CST 2018]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> pers.hdh.sell.controller.BuyerOrderController.create(pers.hdh.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<java.util.List<pers.hdh.sell.dto.OrderDto>> pers.hdh.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<pers.hdh.sell.dto.OrderDto> pers.hdh.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.save(pers.hdh.sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.save(pers.hdh.sell.form.ProductFrom,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerUserController.login(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletResponse)
Mapped "{[/seller/logout],methods=[GET]}" onto public void pers.hdh.sell.controller.SellerUserController.logout()
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void pers.hdh.sell.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 7.269 seconds (JVM running for 8.575)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting SellApplication on LAPTOP-0GL3T8P4 with PID 13716 (F:\repository_git\sell\target\classes started by Lenovo in F:\repository_git\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@17a1e4ca: startup date [Wed Apr 11 15:48:42 CST 2018]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1708 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@17a1e4ca: startup date [Wed Apr 11 15:48:42 CST 2018]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> pers.hdh.sell.controller.BuyerOrderController.create(pers.hdh.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<java.util.List<pers.hdh.sell.dto.OrderDto>> pers.hdh.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<pers.hdh.sell.dto.OrderDto> pers.hdh.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.save(pers.hdh.sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.save(pers.hdh.sell.form.ProductFrom,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerUserController.login(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletResponse)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void pers.hdh.sell.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 5.851 seconds (JVM running for 6.751)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms
HHH000397: Using ASTQueryTranslatorFactory
Starting PushMessageServiceImplTest on LAPTOP-0GL3T8P4 with PID 10480 (started by Lenovo in F:\repository_git\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@45385f75: startup date [Wed Apr 11 20:00:54 CST 2018]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@45385f75: startup date [Wed Apr 11 20:00:54 CST 2018]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> pers.hdh.sell.controller.BuyerOrderController.create(pers.hdh.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<java.util.List<pers.hdh.sell.dto.OrderDto>> pers.hdh.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<pers.hdh.sell.dto.OrderDto> pers.hdh.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.save(pers.hdh.sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.save(pers.hdh.sell.form.ProductFrom,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerUserController.login(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletResponse)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void pers.hdh.sell.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Started PushMessageServiceImplTest in 7.512 seconds (JVM running for 8.598)
HHH000397: Using ASTQueryTranslatorFactory
Closing org.springframework.web.context.support.GenericWebApplicationContext@45385f75: startup date [Wed Apr 11 20:00:54 CST 2018]; root of context hierarchy
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting PushMessageServiceImplTest on LAPTOP-0GL3T8P4 with PID 4676 (started by Lenovo in F:\repository_git\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@45385f75: startup date [Wed Apr 11 20:03:03 CST 2018]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@45385f75: startup date [Wed Apr 11 20:03:03 CST 2018]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> pers.hdh.sell.controller.BuyerOrderController.create(pers.hdh.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<java.util.List<pers.hdh.sell.dto.OrderDto>> pers.hdh.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<pers.hdh.sell.dto.OrderDto> pers.hdh.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.save(pers.hdh.sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.save(pers.hdh.sell.form.ProductFrom,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerUserController.login(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletResponse)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void pers.hdh.sell.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Started PushMessageServiceImplTest in 6.441 seconds (JVM running for 7.45)
HHH000397: Using ASTQueryTranslatorFactory
Closing org.springframework.web.context.support.GenericWebApplicationContext@45385f75: startup date [Wed Apr 11 20:03:03 CST 2018]; root of context hierarchy
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting PushMessageServiceImplTest on LAPTOP-0GL3T8P4 with PID 14616 (started by Lenovo in F:\repository_git\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.web.context.support.GenericWebApplicationContext@45385f75: startup date [Wed Apr 11 20:03:53 CST 2018]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@45385f75: startup date [Wed Apr 11 20:03:53 CST 2018]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> pers.hdh.sell.controller.BuyerOrderController.create(pers.hdh.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<java.util.List<pers.hdh.sell.dto.OrderDto>> pers.hdh.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<pers.hdh.sell.dto.OrderDto> pers.hdh.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.save(pers.hdh.sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.save(pers.hdh.sell.form.ProductFrom,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerUserController.login(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletResponse)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void pers.hdh.sell.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Started PushMessageServiceImplTest in 6.481 seconds (JVM running for 7.438)
HHH000397: Using ASTQueryTranslatorFactory
Closing org.springframework.web.context.support.GenericWebApplicationContext@45385f75: startup date [Wed Apr 11 20:03:53 CST 2018]; root of context hierarchy
Closing JPA EntityManagerFactory for persistence unit 'default'
Starting SellApplication on LAPTOP-0GL3T8P4 with PID 7972 (F:\repository_git\sell\target\classes started by Lenovo in F:\repository_git\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@112f364d: startup date [Wed Apr 11 20:30:22 CST 2018]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2037 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@112f364d: startup date [Wed Apr 11 20:30:22 CST 2018]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> pers.hdh.sell.controller.BuyerOrderController.create(pers.hdh.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<java.util.List<pers.hdh.sell.dto.OrderDto>> pers.hdh.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<pers.hdh.sell.dto.OrderDto> pers.hdh.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.save(pers.hdh.sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.save(pers.hdh.sell.form.ProductFrom,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerUserController.login(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletResponse)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void pers.hdh.sell.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class pers.hdh.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 6.536 seconds (JVM running for 7.497)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 48 ms
【登录校验】 Cookie查不到token
Starting SellApplication on LAPTOP-0GL3T8P4 with PID 14724 (F:\repository_git\sell\target\classes started by Lenovo in F:\repository_git\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@112f364d: startup date [Wed Apr 11 20:45:51 CST 2018]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1873 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@112f364d: startup date [Wed Apr 11 20:45:51 CST 2018]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> pers.hdh.sell.controller.BuyerOrderController.create(pers.hdh.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<java.util.List<pers.hdh.sell.dto.OrderDto>> pers.hdh.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<pers.hdh.sell.dto.OrderDto> pers.hdh.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.save(pers.hdh.sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.save(pers.hdh.sell.form.ProductFrom,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerUserController.login(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletResponse)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void pers.hdh.sell.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class pers.hdh.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 6.193 seconds (JVM running for 7.029)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 36 ms
【登录校验】 Cookie查不到token
【登录校验】 Cookie查不到token
HHH000397: Using ASTQueryTranslatorFactory
【登录校验】 Cookie查不到token
【登录校验】 Cookie查不到token
【websocket消息】 有新的连接，总数:1
【websocket消息】 连接断开，总数:0
【websocket消息】 有新的连接，总数:1
【websocket消息】 连接断开，总数:0
【websocket消息】 有新的连接，总数:1
Starting SellApplication on LAPTOP-0GL3T8P4 with PID 2864 (F:\repository_git\sell\target\classes started by Lenovo in F:\repository_git\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@362045c0: startup date [Wed Apr 11 20:58:47 CST 2018]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1889 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@362045c0: startup date [Wed Apr 11 20:58:47 CST 2018]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> pers.hdh.sell.controller.BuyerOrderController.create(pers.hdh.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<java.util.List<pers.hdh.sell.dto.OrderDto>> pers.hdh.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<pers.hdh.sell.dto.OrderDto> pers.hdh.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.save(pers.hdh.sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.save(pers.hdh.sell.form.ProductFrom,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerUserController.login(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletResponse)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void pers.hdh.sell.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class pers.hdh.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 6.195 seconds (JVM running for 7.266)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
HHH000397: Using ASTQueryTranslatorFactory
【websocket消息】 有新的连接，总数:1
【websocket消息】 广播消息，message=有新的订单
【websocket消息】 连接断开，总数:0
Starting SellApplication on LAPTOP-0GL3T8P4 with PID 11524 (F:\repository_git\sell\target\classes started by Lenovo in F:\repository_git\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@112f364d: startup date [Wed Apr 11 21:15:26 CST 2018]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 2031 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@112f364d: startup date [Wed Apr 11 21:15:26 CST 2018]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> pers.hdh.sell.controller.BuyerOrderController.create(pers.hdh.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<java.util.List<pers.hdh.sell.dto.OrderDto>> pers.hdh.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<pers.hdh.sell.dto.OrderDto> pers.hdh.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.save(pers.hdh.sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.save(pers.hdh.sell.form.ProductFrom,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerUserController.login(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletResponse)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void pers.hdh.sell.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class pers.hdh.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 6.23 seconds (JVM running for 7.17)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
HHH000397: Using ASTQueryTranslatorFactory
【websocket消息】 有新的连接，总数:1
【websocket消息】 连接断开，总数:0
【websocket消息】 有新的连接，总数:1
【websocket消息】 连接断开，总数:0
【websocket消息】 有新的连接，总数:1
【websocket消息】 连接断开，总数:0
【websocket消息】 有新的连接，总数:1
【websocket消息】 广播消息，message=1523452653530871794
【websocket消息】 连接断开，总数:0
【websocket消息】 有新的连接，总数:1
【websocket消息】 连接断开，总数:0
【websocket消息】 有新的连接，总数:1
【websocket消息】 连接断开，总数:0
【websocket消息】 有新的连接，总数:1
【websocket消息】 连接断开，总数:0
【websocket消息】 有新的连接，总数:1
【websocket消息】 连接断开，总数:0
【websocket消息】 有新的连接，总数:1
【websocket消息】 广播消息，message=1523453021959742285
【websocket消息】 连接断开，总数:0
【websocket消息】 有新的连接，总数:1
Starting SellApplication on LAPTOP-0GL3T8P4 with PID 3024 (F:\repository_git\sell\target\classes started by Lenovo in F:\repository_git\sell)
No active profile set, falling back to default profiles: default
Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@112f364d: startup date [Wed Apr 11 21:24:17 CST 2018]; root of context hierarchy
HV000001: Hibernate Validator 5.3.5.Final
Multiple Spring Data modules found, entering strict repository configuration mode!
Multiple Spring Data modules found, entering strict repository configuration mode!
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductCategoryRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.SellerInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.ProductInfoRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderMasterRepository.
Spring Data Redis - Could not safely identify store assignment for repository candidate interface pers.hdh.sell.dao.OrderDetailRepository.
JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
Tomcat initialized with port(s): 8080 (http)
Starting service Tomcat
Starting Servlet Engine: Apache Tomcat/8.5.14
Initializing Spring embedded WebApplicationContext
Root WebApplicationContext: initialization completed in 1894 ms
Mapping servlet: 'dispatcherServlet' to [/]
Mapping filter: 'characterEncodingFilter' to: [/*]
Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
Mapping filter: 'httpPutFormContentFilter' to: [/*]
Mapping filter: 'requestContextFilter' to: [/*]
Building JPA container EntityManagerFactory for persistence unit 'default'
HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
HHH000412: Hibernate Core {5.0.12.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
Initialized JPA EntityManagerFactory for persistence unit 'default'
Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@112f364d: startup date [Wed Apr 11 21:24:17 CST 2018]; root of context hierarchy
Mapped "{[/buyer/order/create],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo<java.util.Map<java.lang.String, java.lang.String>> pers.hdh.sell.controller.BuyerOrderController.create(pers.hdh.sell.form.OrderForm,org.springframework.validation.BindingResult)
Mapped "{[/buyer/order/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<java.util.List<pers.hdh.sell.dto.OrderDto>> pers.hdh.sell.controller.BuyerOrderController.list(java.lang.String,java.lang.Integer,java.lang.Integer)
Mapped "{[/buyer/order/cancel],methods=[POST]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerOrderController.cancel(java.lang.String,java.lang.String)
Mapped "{[/buyer/order/detail],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo<pers.hdh.sell.dto.OrderDto> pers.hdh.sell.controller.BuyerOrderController.detail(java.lang.String,java.lang.String)
Mapped "{[/buyer/product/list],methods=[GET]}" onto public pers.hdh.sell.vo.ResultVo pers.hdh.sell.controller.BuyerProductController.list()
Mapped "{[/pay/notify],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.notify(java.lang.String)
Mapped "{[/pay/create],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.PayController.create(java.lang.String,java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.index(java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.list(java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/category/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerCategoryController.save(pers.hdh.sell.form.CategoryForm,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/cancel],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.cancel(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/detail],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.detail(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/order/finish],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerOrderController.finish(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/index],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.index(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/list],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.list(java.lang.Integer,java.lang.Integer,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/save],methods=[POST]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.save(pers.hdh.sell.form.ProductFrom,org.springframework.validation.BindingResult,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/on_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.onSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/product/off_sale],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerProductController.offSale(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/seller/login],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerUserController.login(java.lang.String,java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletResponse)
Mapped "{[/seller/logout],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView pers.hdh.sell.controller.SellerUserController.logout(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
Mapped "{[/wechat/userInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.userInfo(java.lang.String,java.lang.String)
Mapped "{[/wechat/authorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.authorize(java.lang.String)
Mapped "{[/wechat/qrAuthorize],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrAuthorize(java.lang.String)
Mapped "{[/wechat/qrUserInfo],methods=[GET]}" onto public java.lang.String pers.hdh.sell.controller.WechatController.qrUserInfo(java.lang.String,java.lang.String)
Mapped "{[/weixin/auth],methods=[GET]}" onto public void pers.hdh.sell.controller.WeixinController.auth(java.lang.String)
Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
Detected @ExceptionHandler methods in sellExceptionHandler
Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
ClassTemplateLoader for Spring macros added to FreeMarker configuration
Registering @ServerEndpoint class: class pers.hdh.sell.service.WebSocket
Registering beans for JMX exposure on startup
Initializing ProtocolHandler ["http-nio-8080"]
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http)
Started SellApplication in 6.32 seconds (JVM running for 7.292)
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
FrameworkServlet 'dispatcherServlet': initialization completed in 36 ms
HHH000397: Using ASTQueryTranslatorFactory
【websocket消息】 有新的连接，总数:1
【websocket消息】 广播消息，message=1523453090539701313
【websocket消息】 连接断开，总数:0
【websocket消息】 有新的连接，总数:1
【websocket消息】 广播消息，message=1523453288618792255
【websocket消息】 连接断开，总数:0
【websocket消息】 有新的连接，总数:1
【websocket消息】 连接断开，总数:0
【websocket消息】 有新的连接，总数:1
【websocket消息】 连接断开，总数:0
【websocket消息】 有新的连接，总数:1
